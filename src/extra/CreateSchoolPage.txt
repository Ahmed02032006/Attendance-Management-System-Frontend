import React, { useState, useEffect } from 'react';
import { motion } from "framer-motion";
import { useNavigate } from 'react-router-dom';

const CreateSchoolPage = () => {
  const [currentSlide, setCurrentSlide] = useState(0);
  const [formData, setFormData] = useState({
    name: '',
    year: '',
    phone: '',
    address: '',
    city: '',
    state: '',
    country: '',
    about: '',
    website: '',
    logo: null
  });
  
  const [logoPreview, setLogoPreview] = useState(null);
  
  const images = [
    'https://cdn.pixabay.com/photo/2022/05/24/04/38/study-7217599_1280.jpg',
    'https://cdn.pixabay.com/photo/2020/10/17/15/14/girl-5662435_1280.jpg',
    'https://images.unsplash.com/photo-1460925895917-afdab827c52f',
  ];

  const navigate = useNavigate();

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handleLogoChange = (e) => {
    const file = e.target.files[0];
    if (file) {
      setFormData(prev => ({
        ...prev,
        logo: file
      }));
      
      // Create preview URL
      const reader = new FileReader();
      reader.onloadend = () => {
        setLogoPreview(URL.createObjectURL(file)); // Changed to createObjectURL for better performance
      };
      reader.readAsDataURL(file);
    }
  };

  const onSubmit = (e) => {
    e.preventDefault();
    console.log(formData);
    navigate("/admin/onboarding")
  };

  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentSlide((prev) => (prev + 1) % images.length);
    }, 5000);
    return () => clearInterval(interval);
  }, [images.length]);

  return (
    <div className="flex flex-col md:flex-row h-screen bg-gradient-to-br from-sky-50 to-white overflow-auto">
      {/* Left side - Image slider (hidden on mobile, full width on md, 70% on lg+) */}
      <div className="hidden md:block md:w-full lg:w-[55%] relative overflow-hidden h-[300px] md:h-full">
        {/* Gradient overlay with subtle animation */}
        <div className="absolute inset-0 z-10 bg-gradient-to-t from-black/70 via-black/30 to-black/10"></div>

        {/* Image slider with smoother transitions */}
        <div className="absolute inset-0 flex items-center justify-center">
          {images.map((image, index) => (
            <div
              key={index}
              className={`absolute inset-0 w-full h-full transition-opacity duration-1000 ease-in-out ${index === currentSlide ? 'opacity-100' : 'opacity-0'}`}
              style={{
                backgroundImage: `url(${image})`,
                backgroundSize: 'cover',
                backgroundPosition: 'center',
                backgroundRepeat: 'no-repeat',
                willChange: 'opacity'
              }}
            />
          ))}
        </div>

        {/* Overlay content with animation */}
        <div className="absolute bottom-0 left-0 right-0 p-6 lg:p-12 z-20 text-white hidden sm:block">
          <div className="max-w-2xl mx-auto">
            <motion.h1
              initial={{ y: 20, opacity: 0 }}
              animate={{ y: 0, opacity: 1 }}
              transition={{ duration: 0.6 }}
              className="text-3xl lg:text-5xl font-bold mb-3 lg:mb-5 leading-tight"
            >
              Build Your School's <span className="text-sky-300">Digital Presence</span>
            </motion.h1>

            <motion.p
              initial={{ y: 20, opacity: 0 }}
              animate={{ y: 0, opacity: 1 }}
              transition={{ duration: 0.6, delay: 0.2 }}
              className="text-lg lg:text-xl max-w-lg leading-relaxed opacity-90"
            >
              Join our network of educational institutions and showcase your school to thousands of potential students.
            </motion.p>
          </div>
        </div>
      </div>

      {/* Right side - Form (full width on mobile, 30% on lg+) */}
      <div className="w-full lg:w-[45%] flex items-center justify-center overflow-y-auto bg-white py-8 md:py-0">
        <div className="w-full max-w-md px-4 py-6">
          {/* Logo container - visible only on lg screens and above */}
          <div className="hidden lg:flex justify-center mb-2">
            <div className="w-12 h-12 sm:w-16 sm:h-16 rounded-full bg-sky-100 flex items-center justify-center">
              <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6 sm:h-8 sm:w-8 text-sky-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
              </svg>
            </div>
          </div>

          <h2 className="text-2xl sm:text-3xl font-bold text-center text-gray-800 mb-1">School Registration</h2>
          <p className="text-xs sm:text-sm text-center text-gray-500 mb-6 sm:mb-6">Please fill in your school details</p>

          <form onSubmit={onSubmit} className="space-y-4 sm:space-y-4">
            {/* Simple Image Uploader */}
            <div>
  <div className="flex justify-between items-center mb-1">
    <label htmlFor="logo" className="block text-xs sm:text-sm font-medium text-gray-700">
      School Logo
    </label>
  </div>
  <div className="flex items-center gap-2">
    {/* File input - takes 80% width */}
    <div className="w-[90%] relative">
      <input
        type="file"
        id="logo"
        name="logo"
        accept="image/*"
        onChange={handleLogoChange}
        className="block w-full text-xs sm:text-sm text-gray-500
          file:mr-4 file:py-2 file:px-4
          file:rounded-lg file:border-0
          file:text-xs sm:file:text-sm file:font-medium
          file:bg-sky-50 file:text-sky-700
          hover:file:bg-sky-100
          focus:outline-none"
      />
    </div>

    {/* External link icon - takes 20% width, only shows when image is selected */}
    {logoPreview && (
      <div className="w-[10%] flex justify-center">
        <a 
          href={logoPreview} 
          target="_blank" 
          rel="noopener noreferrer"
          className="inline-flex items-center justify-center w-full py-2 px-3 border border-transparent rounded-lg bg-sky-50 text-sky-700 hover:bg-sky-100 transition-colors"
          title="View selected image"
        >
          <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
          </svg>
        </a>
      </div>
    )}
  </div>
</div>

            {/* School Name */}
            <div>
              <div className="flex justify-between items-center mb-1">
                <label htmlFor="name" className="block text-xs sm:text-sm font-medium text-gray-700">
                  School Name
                </label>
              </div>
              <input
                type="text"
                id="name"
                name="name"
                value={formData.name}
                onChange={handleInputChange}
                className="block w-full rounded-lg border-gray-300 shadow-sm focus:border-sky-500 focus:ring-sky-500 text-xs sm:text-sm p-2 sm:p-3 border"
                placeholder="Enter school name"
              />
            </div>

            {/* Year and Phone */}
            <div className="grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4">
              <div>
                <div className="flex justify-between items-center mb-1">
                  <label htmlFor="year" className="block text-xs sm:text-sm font-medium text-gray-700">
                    Established Year
                  </label>
                </div>
                <input
                  type="number"
                  id="year"
                  name="year"
                  value={formData.year}
                  onChange={handleInputChange}
                  className="block w-full rounded-lg border-gray-300 shadow-sm focus:border-sky-500 focus:ring-sky-500 text-xs sm:text-sm p-2 sm:p-3 border"
                  placeholder="e.g. 1995"
                />
              </div>

              <div>
                <div className="flex justify-between items-center mb-1">
                  <label htmlFor="phone" className="block text-xs sm:text-sm font-medium text-gray-700">
                    Phone
                  </label>
                </div>
                <input
                  type="tel"
                  id="phone"
                  name="phone"
                  value={formData.phone}
                  onChange={handleInputChange}
                  className="block w-full rounded-lg border-gray-300 shadow-sm focus:border-sky-500 focus:ring-sky-500 text-xs sm:text-sm p-2 sm:p-3 border"
                  placeholder="Phone number"
                />
              </div>
            </div>

            {/* Address */}
            <div>
              <div className="flex justify-between items-center mb-1">
                <label htmlFor="address" className="block text-xs sm:text-sm font-medium text-gray-700">
                  Address
                </label>
              </div>
              <textarea
                id="address"
                name="address"
                rows={2}
                value={formData.address}
                onChange={handleInputChange}
                className="block w-full rounded-lg border-gray-300 shadow-sm focus:border-sky-500 focus:ring-sky-500 text-xs sm:text-sm p-2 sm:p-3 border"
                placeholder="Full address"
              />
            </div>

            {/* City, State, Country */}
            <div className="grid grid-cols-1 sm:grid-cols-3 gap-2 sm:gap-3">
              <div>
                <div className="flex justify-between items-center mb-1">
                  <label htmlFor="city" className="block text-xs sm:text-sm font-medium text-gray-700">
                    City
                  </label>
                </div>
                <input
                  type="text"
                  id="city"
                  name="city"
                  value={formData.city}
                  onChange={handleInputChange}
                  className="block w-full rounded-lg border-gray-300 shadow-sm focus:border-sky-500 focus:ring-sky-500 text-xs sm:text-sm p-2 sm:p-3 border"
                  placeholder="City"
                />
              </div>

              <div>
                <div className="flex justify-between items-center mb-1">
                  <label htmlFor="state" className="block text-xs sm:text-sm font-medium text-gray-700">
                    State
                  </label>
                </div>
                <input
                  type="text"
                  id="state"
                  name="state"
                  value={formData.state}
                  onChange={handleInputChange}
                  className="block w-full rounded-lg border-gray-300 shadow-sm focus:border-sky-500 focus:ring-sky-500 text-xs sm:text-sm p-2 sm:p-3 border"
                  placeholder="State"
                />
              </div>

              <div>
                <div className="flex justify-between items-center mb-1">
                  <label htmlFor="country" className="block text-xs sm:text-sm font-medium text-gray-700">
                    Country
                  </label>
                </div>
                <input
                  type="text"
                  id="country"
                  name="country"
                  value={formData.country}
                  onChange={handleInputChange}
                  className="block w-full rounded-lg border-gray-300 shadow-sm focus:border-sky-500 focus:ring-sky-500 text-xs sm:text-sm p-2 sm:p-3 border"
                  placeholder="Country"
                />
              </div>
            </div>

            {/* About School */}
            <div>
              <div className="flex justify-between items-center mb-1">
                <label htmlFor="about" className="block text-xs sm:text-sm font-medium text-gray-700">
                  About School
                </label>
              </div>
              <textarea
                id="about"
                name="about"
                rows={3}
                value={formData.about}
                onChange={handleInputChange}
                className="block w-full rounded-lg border-gray-300 shadow-sm focus:border-sky-500 focus:ring-sky-500 text-xs sm:text-sm p-2 sm:p-3 border"
                placeholder="Describe your school"
              />
            </div>

            {/* Website */}
            <div>
              <div className="flex justify-between items-center mb-1">
                <label htmlFor="website" className="block text-xs sm:text-sm font-medium text-gray-700">
                  Website
                </label>
              </div>
              <input
                type="url"
                id="website"
                name="website"
                value={formData.website}
                onChange={handleInputChange}
                className="block w-full rounded-lg border-gray-300 shadow-sm focus:border-sky-500 focus:ring-sky-500 text-xs sm:text-sm p-2 sm:p-3 border"
                placeholder="https://yourschool.edu"
              />
            </div>

            {/* Submit Button */}
            <div className="pt-2">
              <button
                type="submit"
                className="w-full flex justify-center items-center py-2 sm:py-3 px-4 border border-transparent rounded-lg shadow-sm text-xs sm:text-sm font-medium text-white bg-sky-600 hover:bg-sky-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sky-500 transition-colors duration-200"
              >
                Register School
                <svg xmlns="http://www.w3.org/2000/svg" className="h-3 w-3 sm:h-4 sm:w-4 ml-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M14 5l7 7m0 0l-7 7m7-7H3" />
                </svg>
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  );
};

export default CreateSchoolPage;